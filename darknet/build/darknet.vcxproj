<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{ABD52EE3-4E38-3D75-9FA8-83713B9D37F6}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>darknet</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">darknet.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">darknet</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">darknet.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">darknet</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">darknet.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">darknet</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">darknet.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">darknet</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.lib</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENCV;GPU;CUDNN;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;OPENCV;GPU;CUDNN;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;OPENCV;GPU;CUDNN;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;OPENCV;GPU;CUDNN;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;OPENCV;GPU;CUDNN;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;OPENCV;GPU;CUDNN;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;OPENCV;GPU;CUDNN;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;OPENCV;GPU;CUDNN;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Program Files\opencv340\opencv\build\include;D:\Program Files\opencv340\opencv\build\include\opencv;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include;D:\ykma\sur\contrib\darknet\src;D:\ykma\sur\contrib\darknet\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/ykma/sur/contrib/darknet/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -HD:/ykma/sur/contrib/darknet -BD:/ykma/sur/contrib/darknet/build --check-stamp-file D:/ykma/sur/contrib/darknet/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/CMakeLists.txt;D:\ykma\sur\contrib\darknet\CMakeLists.txt;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeSystem.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeRCCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeRCInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\opencv340\opencv\build\OpenCVConfig-version.cmake;D:\Program Files\opencv340\opencv\build\OpenCVConfig.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-Determine-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeTestCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompilerABI.cpp;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompileFeatures.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Internal\FeatureTesting.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-CXX-FeatureTests.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\feature_tests.cxx;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCXXCompiler.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVConfig.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageMessage.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules-debug.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules-release.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageMessage.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\select_compute_arch.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/ykma/sur/contrib/darknet/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -HD:/ykma/sur/contrib/darknet -BD:/ykma/sur/contrib/darknet/build --check-stamp-file D:/ykma/sur/contrib/darknet/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/CMakeLists.txt;D:\ykma\sur\contrib\darknet\CMakeLists.txt;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeSystem.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeRCCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeRCInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\opencv340\opencv\build\OpenCVConfig-version.cmake;D:\Program Files\opencv340\opencv\build\OpenCVConfig.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-Determine-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeTestCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompilerABI.cpp;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompileFeatures.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Internal\FeatureTesting.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-CXX-FeatureTests.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\feature_tests.cxx;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCXXCompiler.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVConfig.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageMessage.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules-debug.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules-release.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageMessage.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\select_compute_arch.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/ykma/sur/contrib/darknet/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -HD:/ykma/sur/contrib/darknet -BD:/ykma/sur/contrib/darknet/build --check-stamp-file D:/ykma/sur/contrib/darknet/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/CMakeLists.txt;D:\ykma\sur\contrib\darknet\CMakeLists.txt;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeSystem.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeRCCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeRCInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\opencv340\opencv\build\OpenCVConfig-version.cmake;D:\Program Files\opencv340\opencv\build\OpenCVConfig.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-Determine-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeTestCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompilerABI.cpp;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompileFeatures.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Internal\FeatureTesting.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-CXX-FeatureTests.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\feature_tests.cxx;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCXXCompiler.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVConfig.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageMessage.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules-debug.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules-release.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageMessage.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\select_compute_arch.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/ykma/sur/contrib/darknet/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -HD:/ykma/sur/contrib/darknet -BD:/ykma/sur/contrib/darknet/build --check-stamp-file D:/ykma/sur/contrib/darknet/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/CMakeLists.txt;D:\ykma\sur\contrib\darknet\CMakeLists.txt;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeSystem.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC-C.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeRCCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeRCInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\opencv340\opencv\build\OpenCVConfig-version.cmake;D:\Program Files\opencv340\opencv\build\OpenCVConfig.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-Determine-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeTestCXXCompiler.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompilerABI.cpp;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeDetermineCompileFeatures.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Internal\FeatureTesting.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\Compiler\MSVC-CXX-FeatureTests.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\feature_tests.cxx;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;D:\ykma\sur\contrib\darknet\build\CMakeFiles\3.10.3\CMakeCXXCompiler.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVConfig.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageMessage.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules-debug.cmake;D:\Program Files\opencv340\opencv\build\x64\vc14\lib\OpenCVModules-release.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindPackageMessage.cmake;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\select_compute_arch.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.depend;D:\Program Files\cmake-3.10.3-win64-x64\share\cmake-3.10\Modules\FindCUDA\run_nvcc.cmake;D:\ykma\sur\contrib\darknet\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\activation_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_activation_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/activation_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\activation_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_activation_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_activation_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/activation_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\activation_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_activation_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_activation_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/activation_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\activation_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_activation_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_activation_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_activation_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/activation_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_activation_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\activation_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_activation_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\avgpool_layer_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/avgpool_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\avgpool_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/avgpool_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\avgpool_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/avgpool_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\avgpool_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/avgpool_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\avgpool_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\blas_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_blas_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/blas_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\blas_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_blas_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_blas_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/blas_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\blas_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_blas_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_blas_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/blas_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\blas_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_blas_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_blas_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_blas_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/blas_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_blas_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\blas_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_blas_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\col2im_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_col2im_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/col2im_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\col2im_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_col2im_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_col2im_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/col2im_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\col2im_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_col2im_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_col2im_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/col2im_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\col2im_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_col2im_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_col2im_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_col2im_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/col2im_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_col2im_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\col2im_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_col2im_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\convolutional_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_convolutional_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/convolutional_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\convolutional_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_convolutional_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_convolutional_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/convolutional_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\convolutional_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_convolutional_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_convolutional_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/convolutional_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\convolutional_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_convolutional_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_convolutional_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_convolutional_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/convolutional_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_convolutional_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\convolutional_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_convolutional_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\crop_layer_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_crop_layer_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/crop_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\crop_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_crop_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_crop_layer_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/crop_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\crop_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_crop_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_crop_layer_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/crop_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\crop_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_crop_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_crop_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_crop_layer_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/crop_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_crop_layer_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\crop_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_crop_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\deconvolutional_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_deconvolutional_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/deconvolutional_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\deconvolutional_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_deconvolutional_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_deconvolutional_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/deconvolutional_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\deconvolutional_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_deconvolutional_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_deconvolutional_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/deconvolutional_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\deconvolutional_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_deconvolutional_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_deconvolutional_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_deconvolutional_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/deconvolutional_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_deconvolutional_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\deconvolutional_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_deconvolutional_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\dropout_layer_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_dropout_layer_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/dropout_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\dropout_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_dropout_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_dropout_layer_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/dropout_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\dropout_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_dropout_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_dropout_layer_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/dropout_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\dropout_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_dropout_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_dropout_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_dropout_layer_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/dropout_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_dropout_layer_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\dropout_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_dropout_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\im2col_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_im2col_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/im2col_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\im2col_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_im2col_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_im2col_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/im2col_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\im2col_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_im2col_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_im2col_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/im2col_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\im2col_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_im2col_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_im2col_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_im2col_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/im2col_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_im2col_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\im2col_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_im2col_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\mat2im_layer_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/mat2im_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\mat2im_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/mat2im_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\mat2im_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/mat2im_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\mat2im_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/mat2im_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\mat2im_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\ykma\sur\contrib\darknet\src\maxpool_layer_kernels.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.Debug.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/ykma/sur/contrib/darknet/src/maxpool_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.Debug.cmake;D:\ykma\sur\contrib\darknet\src\maxpool_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.Release.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/ykma/sur/contrib/darknet/src/maxpool_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.Release.cmake;D:\ykma\sur\contrib\darknet\src\maxpool_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.MinSizeRel.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/ykma/sur/contrib/darknet/src/maxpool_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.MinSizeRel.cmake;D:\ykma\sur\contrib\darknet\src\maxpool_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building NVCC (Device) object CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -E make_directory D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)
if %errorlevel% neq 0 goto :cmEnd
"D:\Program Files\cmake-3.10.3-win64-x64\bin\cmake.exe" -D verbose:BOOL=OFF -D "CCBIN:PATH=$(VCInstallDir)bin" -D build_configuration:STRING=$(ConfigurationName) -D generated_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj -D generated_cubin_file:STRING=D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/$(Configuration)/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.cubin.txt -P D:/ykma/sur/contrib/darknet/build/CMakeFiles/cuda_compile_1.dir/src/cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.RelWithDebInfo.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/ykma/sur/contrib/darknet/src/maxpool_layer_kernels.cu;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.depend;D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj.RelWithDebInfo.cmake;D:\ykma\sur\contrib\darknet\src\maxpool_layer_kernels.cu;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\activation_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\activations.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\avgpool_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\batchnorm_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\blas.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\box.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\col2im.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\connected_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\convolutional_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\cost_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\crnn_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\crop_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\cuda.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\data.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\deconvolutional_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\detection_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\dropout_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\gemm.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\gru_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\im2col.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\image.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\list.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\local_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\lstm_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\mat2im_layer.cpp"  />
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\matrix.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\maxpool_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\network.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\normalization_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\option_list.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\parser.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\region_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\reorg_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\rnn_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\route_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\shortcut_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\softmax_layer.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\tree.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="D:\ykma\sur\contrib\darknet\src\utils.c" >
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_activation_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_avgpool_layer_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_blas_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_col2im_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_convolutional_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_crop_layer_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_deconvolutional_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_dropout_layer_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_im2col_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_mat2im_layer_kernels.cu.obj" />
    <Object Include="D:\ykma\sur\contrib\darknet\build\CMakeFiles\cuda_compile_1.dir\src\$(Configuration)\cuda_compile_1_generated_maxpool_layer_kernels.cu.obj" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\ykma\sur\contrib\darknet\build\ZERO_CHECK.vcxproj">
      <Project>{E3AF607A-7596-3BD6-9A9B-5D2D83E917AE}</Project>
      <Name>ZERO_CHECK</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>